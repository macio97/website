diff --git a/.eleventy.js b/.eleventy.js
index 0cdf2e6..acc703d 100644
--- a/.eleventy.js
+++ b/.eleventy.js
@@ -27,13 +27,9 @@ module.exports = function(eleventyConfig) {
 
     eleventyConfig.addFilter("urlname", function(url) {
         parts = url.replace(".html", "").split("/");
-        return parts[parts.length - 1];
+        return parts[parts.length - 2];
     });
 
-    eleventyConfig.setBrowserSyncConfig(
-        require("./configs/browsersync.js")("_site")
-    );
-
     /* This setting should be default in future versions of eleventy.
      * It allows the data in the files to behave nicer. */
     eleventyConfig.setDataDeepMerge(true);
@@ -62,4 +58,4 @@ module.exports = function(eleventyConfig) {
         date = date.setHours(0, 0, 0);
         return moment.parseZone(date).format("YYYY-MM-DD");
     });
-};
\ No newline at end of file
+};
diff --git a/configs/browsersync.js b/configs/browsersync.js
deleted file mode 100644
index 0a242d0..0000000
--- a/configs/browsersync.js
+++ /dev/null
@@ -1,41 +0,0 @@
-/* Adapted from https://jec.fyi/blog/customizing-file-structure-urls-browsersync
- * Thanks! */
-
-const fs = require('fs');
-const url = require('url');
-
-module.exports = (output) => ({
-    server: {
-      baseDir: "_site",
-      serveStaticOptions: {
-        extensions: ["html"]
-      }
-    },
-
-    middleware: [
-      function(req, res, next) {
-        console.log("GET:", req.url);
-        let u = url.parse(req.url);
-        parsed = u.pathname;
-
-        if (parsed.match(/\/+$/)) {
-          parsed = parsed.replace(/\/+$/, '');
-          parsed = `${output}${parsed}.html`;
-          
-          /* Check if that page exists. */
-          if (fs.existsSync(parsed)) {
-            console.log(parsed);
-            const content = fs.readFileSync(parsed);
-            res.write(content);
-            res.writeHead(200);
-            res.end();
-          }
-          else {
-            return next();
-          }
-
-        }
-        next();
-      }
-    ]
-  });
